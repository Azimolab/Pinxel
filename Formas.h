class Formas{
  
const uint8_t SpriteFormasData[768] = {
  B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00000001),B8_3BIT(10000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00002220),B8_3BIT(11000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00022222),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00022222),B8_3BIT(01120000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00122222),B8_3BIT(20020000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00122344),B8_3BIT(42240000),B8_3BIT(00000000),
  B8_3BIT(00000001),B8_3BIT(10123440),B8_3BIT(03040000),B8_3BIT(00000000),
  B8_3BIT(00000111),B8_3BIT(11023440),B8_3BIT(03040000),B8_3BIT(00000000),
  B8_3BIT(00002111),B8_3BIT(11023344),B8_3BIT(43430000),B8_3BIT(22200000),
  B8_3BIT(00002221),B8_3BIT(01102300),B8_3BIT(00300110),B8_3BIT(21110100),
  B8_3BIT(00002220),B8_3BIT(20110333),B8_3BIT(33011110),B8_3BIT(22220200),
  B8_3BIT(00000220),B8_3BIT(22011000),B8_3BIT(00111110),B8_3BIT(22200000),
  B8_3BIT(00000022),B8_3BIT(22011111),B8_3BIT(11000000),B8_3BIT(00000000),
  B8_3BIT(00000002),B8_3BIT(20111111),B8_3BIT(10000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(02211111),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(02222222),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(12222221),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000001),B8_3BIT(11222211),B8_3BIT(10000000),B8_3BIT(00000000),
  B8_3BIT(00000021),B8_3BIT(11100111),B8_3BIT(22000000),B8_3BIT(00000000),
  B8_3BIT(00000222),B8_3BIT(11000022),B8_3BIT(22000000),B8_3BIT(00000000),
  B8_3BIT(00022222),B8_3BIT(20000022),B8_3BIT(20000000),B8_3BIT(00000000),
  B8_3BIT(02222222),B8_3BIT(00000222),B8_3BIT(22220000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),

  B8_2BIT(00000000),B8_2BIT(00000000),B8_2BIT(00000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00000001),B8_2BIT(10000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00002220),B8_2BIT(11000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00022222),B8_2BIT(00000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00022222),B8_2BIT(01120000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00122222),B8_2BIT(20020000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00122333),B8_2BIT(32230000),B8_2BIT(00000000),
  B8_2BIT(00000001),B8_2BIT(10123333),B8_2BIT(33330000),B8_2BIT(00000000),
  B8_2BIT(00000111),B8_2BIT(11023000),B8_2BIT(03000000),B8_2BIT(00000000),
  B8_2BIT(00002111),B8_2BIT(11023333),B8_2BIT(33330000),B8_2BIT(22200000),
  B8_2BIT(00002221),B8_2BIT(01102300),B8_2BIT(00300110),B8_2BIT(21110100),
  B8_2BIT(00002220),B8_2BIT(20110333),B8_2BIT(33011110),B8_2BIT(22220200),
  B8_2BIT(00000220),B8_2BIT(22011000),B8_2BIT(00111110),B8_2BIT(22200000),
  B8_2BIT(00000022),B8_2BIT(22011111),B8_2BIT(11000000),B8_2BIT(00000000),
  B8_2BIT(00000002),B8_2BIT(20111111),B8_2BIT(10000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(02211111),B8_2BIT(00000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(02222222),B8_2BIT(00000000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(12222221),B8_2BIT(00000000),B8_2BIT(00000000),
  B8_2BIT(00000001),B8_2BIT(11222211),B8_2BIT(10000000),B8_2BIT(00000000),
  B8_2BIT(00000021),B8_2BIT(11100111),B8_2BIT(22000000),B8_2BIT(00000000),
  B8_2BIT(00000222),B8_2BIT(11000022),B8_2BIT(22000000),B8_2BIT(00000000),
  B8_2BIT(00022222),B8_2BIT(20000022),B8_2BIT(20000000),B8_2BIT(00000000),
  B8_2BIT(02222222),B8_2BIT(00000222),B8_2BIT(22220000),B8_2BIT(00000000),
  B8_2BIT(00000000),B8_2BIT(00000000),B8_2BIT(00000000),B8_2BIT(00000000),

  B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00000011),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00022201),B8_3BIT(10000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00222220),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00222220),B8_3BIT(11200000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(01222222),B8_3BIT(00200000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(01223444),B8_3BIT(22400000),B8_3BIT(00000000),
  B8_3BIT(00000011),B8_3BIT(01234400),B8_3BIT(30400000),B8_3BIT(00000000),
  B8_3BIT(00001111),B8_3BIT(10234400),B8_3BIT(30400000),B8_3BIT(00000000),
  B8_3BIT(00021111),B8_3BIT(10233444),B8_3BIT(34300002),B8_3BIT(22000000),
  B8_3BIT(00022210),B8_3BIT(11023000),B8_3BIT(03001102),B8_3BIT(11101000),
  B8_3BIT(00022202),B8_3BIT(01103333),B8_3BIT(30111102),B8_3BIT(22202000),
  B8_3BIT(00002202),B8_3BIT(20110000),B8_3BIT(01111102),B8_3BIT(22000000),
  B8_3BIT(00000222),B8_3BIT(20111111),B8_3BIT(10000000),B8_3BIT(00000000),
  B8_3BIT(00000022),B8_3BIT(01111111),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(22111110),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(22222220),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000001),B8_3BIT(22222210),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000011),B8_3BIT(12222111),B8_3BIT(00000000),B8_3BIT(00000000),
  B8_3BIT(00000211),B8_3BIT(11001112),B8_3BIT(20000000),B8_3BIT(00000000),
  B8_3BIT(00000222),B8_3BIT(11000022),B8_3BIT(22000000),B8_3BIT(00000000),
  B8_3BIT(00022222),B8_3BIT(20000022),B8_3BIT(20000000),B8_3BIT(00000000),
  B8_3BIT(02222222),B8_3BIT(00000222),B8_3BIT(22220000),B8_3BIT(00000000),
  B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000),B8_3BIT(00000000) };

const struct CRGB SpriteFormasCols[7] = { CRGB(129,190,255), CRGB(0,120,248), CRGB(248,216,120), CRGB(248,248,248), CRGB(0,0,0), CRGB(0,0,0), CRGB(0,0,0) };
  


const uint8_t SpriteMegamanMask[768] = {
  B8_1BIT(00000000),B8_1BIT(00000000),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(00000011),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(00011101),B8_1BIT(10000000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(00111110),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(00111110),B8_1BIT(11100000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(01111111),B8_1BIT(00100000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(01111111),B8_1BIT(11100000),B8_1BIT(00000000),
  B8_1BIT(00000011),B8_1BIT(01111100),B8_1BIT(10100000),B8_1BIT(00000000),
  B8_1BIT(00001111),B8_1BIT(10111100),B8_1BIT(10100000),B8_1BIT(00000000),
  B8_1BIT(00011111),B8_1BIT(10111111),B8_1BIT(11100001),B8_1BIT(11000000),
  B8_1BIT(00011110),B8_1BIT(11011000),B8_1BIT(01001101),B8_1BIT(11101000),
  B8_1BIT(00011101),B8_1BIT(01101111),B8_1BIT(10111101),B8_1BIT(11101000),
  B8_1BIT(00001101),B8_1BIT(10110000),B8_1BIT(01111101),B8_1BIT(11000000),
  B8_1BIT(00000111),B8_1BIT(10111111),B8_1BIT(10000000),B8_1BIT(00000000),
  B8_1BIT(00000011),B8_1BIT(01111111),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(11111110),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(11111110),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000001),B8_1BIT(11111110),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000011),B8_1BIT(11111111),B8_1BIT(00000000),B8_1BIT(00000000),
  B8_1BIT(00000111),B8_1BIT(11001111),B8_1BIT(10000000),B8_1BIT(00000000),
  B8_1BIT(00000111),B8_1BIT(11000011),B8_1BIT(11000000),B8_1BIT(00000000),
  B8_1BIT(00011111),B8_1BIT(10000011),B8_1BIT(10000000),B8_1BIT(00000000),
  B8_1BIT(01111111),B8_1BIT(00000111),B8_1BIT(11110000),B8_1BIT(00000000),
  B8_1BIT(00000000),B8_1BIT(00000000),B8_1BIT(00000000),B8_1BIT(00000000) };






  cLEDSprites Sprites;
  cSprite sprFormas;

  public:
  Formas():Sprites(&leds){};

  void setup(){
    setupFormas();
    FastLED.clear();
  }

boolean loop(){


  FastLED.clear();
  Sprites.UpdateSprites();
 
  if (receptor.decode(&resultado))  
  {  
    Serial.print("Codigo do botao: ");  
    Serial.println(resultado.value, HEX);  
    Sprites.RemoveAllSprites();
    codigo = resultado.value; 
    switch (codigo)  
    {  
      case (0x1FE58A7):   
          currentApp = -1;
          return false;
      }
      setupFormas();
      receptor.resume();  
    }


    if (SerialBT.available())
    {
      char keyPress = (char)SerialBT.read();
      FastLED.clear();
      Serial.println(keyPress);  
      switch (keyPress)
      {    
            //Menu
          case 'm':
            currentApp = -1;
            return false;
            break;

             
            //Sobre
         // case 'm':
          //  currentApp = 0;
         //   return false;
         //   break;

             
            //Screensaver
          case '!':
            currentApp = 1;
            return false;
            break;
            
          //alfabeto
         case 'l':
            currentApp = 2;
            return false;
            break;

            //Numeros
          case 'n':
            currentApp = 3;
            return false;
            break;

              //Formas
          case 'f':
            currentApp = 4;
            return false;
            break;
            
            //Cores
          case 'c':
            currentApp = 5;
            return false;
            break;
            
             //Padroes
          case 'p':
            currentApp = 6;
            return false;
            break;
            
            //Efeitos1
         case '<':
            currentApp = 7;
            return false;
            break;

                 //Efeitos2
         case '>':
             currentApp = 8;
            return false;
            break;

                 //Efeitos3
         case '[':
             currentApp = 9;
            return false;
            break;

            //Livre
         case '?':
             currentApp = 10;
            return false;
            break;  
            
            //Tetris
          case 't':
            currentApp = 11;
            return false;
            break;

             //breakout
          case 'x':
            currentApp = 12;
            return false;
            break;
            
            //Snake
          case 'q':
            currentApp = 13;
            return false;
            break;
      }
    }
    
  
   Sprites.RenderSprites();
   FastLED.show();
   return true; 
    
  }

  private:

  void setupFormas() {
  
    sprFormas.Setup(32, 24, SpriteFormasData, 3, _3BIT, SpriteFormasCols, SpriteMegamanMask);
    sprFormas.SetFrame(0,10); 
    //sprFormas.SetPosition(1,1);
    Sprites.AddSprite(&sprFormas);
  }
 
};
